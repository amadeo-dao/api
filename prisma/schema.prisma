// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model vault {
  id                      Int             @id @default(autoincrement())
  name                    String
  address                 String          @unique
  symbol                  String
  decimals                Int             @default(18)
  totalSupply             String          @default("0")
  assetsUnderManagement   String          @default("0")
  assetsInUse             String          @default("0")
  sharePrice              String          @default("0")
  manager                 String          @default("")
  lastUpdateBlock         Int             @default(0)
  asset                   asset?
  shareholders            shareholder[]
  shareholderTransactions shareholderTx[]

  @@map("vaults")
}

model asset {
  id       Int    @id @default(autoincrement())
  name     String
  address  String
  symbol   String
  decimals Int    @default(18)
  vaultId  Int    @unique
  vault    vault  @relation(fields: [vaultId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("assets")
}

model shareholder {
  id                     Int             @id @default(autoincrement())
  address                String          @unique
  shares                 String          @default("0")
  assetBalance           String          @default("0")
  vaultId                Int
  vault                  vault           @relation(fields: [vaultId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ShareholderTransaction shareholderTx[]

  @@unique([vaultId, address])
  @@map("shareholders")
}

enum TxType {
  Deposit
  Withdraw
}

model shareholderTx {
  id            Int         @id @default(autoincrement())
  assets        String
  shares        String
  timeStamp     DateTime    @default(now())
  txHash        String
  txType        TxType
  logIndex      Int
  shareholderId Int
  shareholder   shareholder @relation(fields: [shareholderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  vaultId       Int
  vault         vault       @relation(fields: [vaultId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([shareholderId, txHash, logIndex])
  @@map("shareholderTxs")
}
